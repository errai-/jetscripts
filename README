Author Hannu Siikonen (github: errai-)
README updated 16.5.2015

#1) INTRODUCTION
#2) FOLDER DESCRIPTIONS
#3) INSTALLATION INSTRUCTIONS


#1) INTRODUCTION
This is a collection of data analysis and simulation tools used with the CMS
project. Developed under Helsinki Institute of Physics, which contributes to
the CMS project.


#2) FOLDER DESCRIPTIONS
data_analysis:
Tools for analyzing CMS jet data. Aim is to conveniently and quickly make plots
of different aspects.
Last updates in autumn 2014

jet_simulations:
Simulation tools for generating particle data with pythia6, pythia8 and
Herwig++. A common jet sorting algorithm to turn the particle data into jet
data.
Currently actively developed.

simulation_analysis:
A collection of scripts for turning simulated jet data into various plots.
Mostly not compatible with the newest versions of the simulations, these are to
be updated.
Last updates in December 2014

useful_structures:
A collection of useful small scripts and old code versions, which may come in
handy in certain circumstances.
Updated occasionally, files remain mostly static after they are added here.


#3) INSTALLATION

Installation instructions for various softwares that are needed for the simulations.
Some of the installations need to be done in the correct order, so that dependencies work correctly.

 #Zero] Other operations

 -These are done after the installations but are generally important for working code.

In .bashrc (or similar), add:
 export LD_LIBRARY_PATH = $LD_LIBRARY_PATH:/usr/local/lib:"pythia6Dir":"jetscriptsDir"/jet_simulations/lib

 -Here "pythia6Dir" is the installation location of pythia 6 and"jetscriptsDir" is the location of this folder.

In /usr/local/ and /usr/ subdirectories, remove the files related to previous installations (if there is one) of these
programs. Found easily for instance by running:
 locate pythia8 | grep /usr/

 #I] Fastjet3[.1.2] (recommended to be installed first)

Run:
 ./configure
 -If errors or problems occur, some additional software installations or other fixes might be needed.

Run:
 make -j
 -Uses as many threads as possible for the build, a number after -j can be used to specify a smaller amount.

Run:
 make check

Run:
 sudo make install
 -Copies the installation below /usr/local

 #II] Pythia8[.2.05] (dependency: Fastjet3)

Run:
 ./configure --with-fastjet3=/usr/local --enable-64bit --enable-shared --prefix=/usr/local
 -Depending on the machine additional flags might be needed.
  Check that the output of configurations seems to be sensible.

Run:
 sudo make install
 -Copies the installation below /usr/local

In .bashrc, write:
 export PYTHIA8=/usr/local
 export PYTHIA8DATA=/usr/local/share/Pythia8/xmldoc

 #III] Pythia6[.4.28]

Download https://root.cern.ch/download/pythia6.tar.gz and extract it to a good location.
Remove the pythia*.f file and replace it with the newest pythia6 version available.
Run a makePythia6 binary corresponding to the used computer architechture.

 #IV] ROOT 6[.03/05] (dependency: Pythia6, Pythia8 [optional])

Run:
 ./configure --with-pythia6-libdir="Location chosen in #III)"
 -Links root with pythia6 and other necessary components.
  Note that pythia8 is not linked with root, since this will lead to inconveniences.

Run:
 make -j
 -A fast local installation. This will freeze the computer so with 8 available threads 'make -j4' can be a good choice.

In .bashrc, add:
 source "rootDir"/bin/thisroot.sh

Remarks:
 Having or not having pythia8 explicitly linked for root should not be an issue. TPythia8 can be a convenient and
 fast way to access pythia8 features, but it also removes some of the agility of the plain pythia8.

 #V] ThePEG

 #VI] HERWIG++

