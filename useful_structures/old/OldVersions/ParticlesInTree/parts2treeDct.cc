//
// File generated by /home/hannu/Cern/root/bin/rootcint at Mon Jan 26 21:36:14 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME parts2treeDct
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "parts2treeDct.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::MinimalEvent MinimalEvent;
      #else
      class MinimalEvent  {
         public:
         //friend XX;
         ::DoubleInBinary transformer; //
         ::IntInBinary iTransformer; //
         vector< double > px; //
         vector< double > py; //
         vector< double > pz; //
         vector< double > e; //
         vector< int > id; //
         unsigned long eventno; //
         unsigned long particles; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void MinimalEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void MinimalEvent_Dictionary();
   static void *new_MinimalEvent(void *p = 0);
   static void *newArray_MinimalEvent(Long_t size, void *p);
   static void delete_MinimalEvent(void *p);
   static void deleteArray_MinimalEvent(void *p);
   static void destruct_MinimalEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MinimalEvent*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::MinimalEvent) == sizeof( ::ROOTShadow::Shadow::MinimalEvent));
      ::MinimalEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::MinimalEvent),0);
      static ::ROOT::TGenericClassInfo 
         instance("MinimalEvent", "./MinimalEvent.h", 29,
                  typeid(::MinimalEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &MinimalEvent_ShowMembers, &MinimalEvent_Dictionary, isa_proxy, 4,
                  sizeof(::MinimalEvent) );
      instance.SetNew(&new_MinimalEvent);
      instance.SetNewArray(&newArray_MinimalEvent);
      instance.SetDelete(&delete_MinimalEvent);
      instance.SetDeleteArray(&deleteArray_MinimalEvent);
      instance.SetDestructor(&destruct_MinimalEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MinimalEvent*)
   {
      return GenerateInitInstanceLocal((::MinimalEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MinimalEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void MinimalEvent_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::MinimalEvent*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

//______________________________________________________________________________
namespace ROOTDict {
   void MinimalEvent_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class MinimalEvent.
      typedef ::ROOTShadow::Shadow::MinimalEvent ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::MinimalEvent*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "transformer", (void*)&sobj->transformer);
      R__insp.InspectMember("DoubleInBinary", (void*)&sobj->transformer, "transformer.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iTransformer", (void*)&sobj->iTransformer);
      R__insp.InspectMember("IntInBinary", (void*)&sobj->iTransformer, "iTransformer.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "px", (void*)&sobj->px);
      R__insp.InspectMember("vector<double>", (void*)&sobj->px, "px.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "py", (void*)&sobj->py);
      R__insp.InspectMember("vector<double>", (void*)&sobj->py, "py.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pz", (void*)&sobj->pz);
      R__insp.InspectMember("vector<double>", (void*)&sobj->pz, "pz.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "e", (void*)&sobj->e);
      R__insp.InspectMember("vector<double>", (void*)&sobj->e, "e.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", (void*)&sobj->id);
      R__insp.InspectMember("vector<int>", (void*)&sobj->id, "id.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventno", &sobj->eventno);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particles", &sobj->particles);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MinimalEvent(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MinimalEvent : new ::MinimalEvent;
   }
   static void *newArray_MinimalEvent(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MinimalEvent[nElements] : new ::MinimalEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_MinimalEvent(void *p) {
      delete ((::MinimalEvent*)p);
   }
   static void deleteArray_MinimalEvent(void *p) {
      delete [] ((::MinimalEvent*)p);
   }
   static void destruct_MinimalEvent(void *p) {
      typedef ::MinimalEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MinimalEvent

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 4,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

/********************************************************
* parts2treeDct.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableparts2treeDct();

extern "C" void G__set_cpp_environmentparts2treeDct() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("MinimalEvent.h");
  G__cpp_reset_tagtableparts2treeDct();
}
#include <new>
extern "C" int G__cpp_dllrevparts2treeDct() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MinimalEvent */
static int G__parts2treeDct_170_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MinimalEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MinimalEvent[n];
     } else {
       p = new((void*) gvp) MinimalEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MinimalEvent;
     } else {
       p = new((void*) gvp) MinimalEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__parts2treeDctLN_MinimalEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_170_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MinimalEvent*) G__getstructoffset())->SetVals((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), (size_t) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_170_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MinimalEvent*) G__getstructoffset())->Nullify();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_170_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MinimalEvent*) G__getstructoffset())->Write((ofstream*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_170_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MinimalEvent*) G__getstructoffset())->Read((ifstream*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__parts2treeDct_170_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MinimalEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MinimalEvent(*(MinimalEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__parts2treeDctLN_MinimalEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MinimalEvent G__TMinimalEvent;
static int G__parts2treeDct_170_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MinimalEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MinimalEvent*) (soff+(sizeof(MinimalEvent)*i)))->~G__TMinimalEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MinimalEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MinimalEvent*) (soff))->~G__TMinimalEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__parts2treeDct_170_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MinimalEvent* dest = (MinimalEvent*) G__getstructoffset();
   *dest = *(MinimalEvent*) libp->para[0].ref;
   const MinimalEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<int,allocator<int> > */
static int G__parts2treeDct_172_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int,allocator<int> >::reference obj = ((vector<int,allocator<int> >*) G__getstructoffset())->at((vector<int,allocator<int> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int,allocator<int> >::const_reference obj = ((const vector<int,allocator<int> >*) G__getstructoffset())->at((vector<int,allocator<int> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int,allocator<int> >::iterator* pobj;
         vector<int,allocator<int> >::iterator xobj = ((vector<int,allocator<int> >*) G__getstructoffset())->begin();
         pobj = new vector<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int,allocator<int> >::iterator* pobj;
         vector<int,allocator<int> >::iterator xobj = ((vector<int,allocator<int> >*) G__getstructoffset())->end();
         pobj = new vector<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int,allocator<int> >::reverse_iterator* pobj;
         vector<int,allocator<int> >::reverse_iterator xobj = ((vector<int,allocator<int> >*) G__getstructoffset())->rbegin();
         pobj = new vector<int,allocator<int> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int,allocator<int> >::reverse_iterator* pobj;
         vector<int,allocator<int> >::reverse_iterator xobj = ((vector<int,allocator<int> >*) G__getstructoffset())->rend();
         pobj = new vector<int,allocator<int> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<int,allocator<int> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<int,allocator<int> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<int,allocator<int> >*) G__getstructoffset())->resize((vector<int,allocator<int> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<int,allocator<int> >*) G__getstructoffset())->resize((vector<int,allocator<int> >::size_type) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<int,allocator<int> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<int,allocator<int> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int,allocator<int> >::reference obj = ((vector<int,allocator<int> >*) G__getstructoffset())->operator[]((vector<int,allocator<int> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int,allocator<int> >::const_reference obj = ((const vector<int,allocator<int> >*) G__getstructoffset())->operator[]((vector<int,allocator<int> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<int,allocator<int> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<int,allocator<int> >[n];
     } else {
       p = new((void*) gvp) vector<int,allocator<int> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<int,allocator<int> >;
     } else {
       p = new((void*) gvp) vector<int,allocator<int> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<int,allocator<int> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<int,allocator<int> >((vector<int,allocator<int> >::size_type) G__int(libp->para[0]), *(int*) G__Intref(&libp->para[1]));
     } else {
       p = new((void*) gvp) vector<int,allocator<int> >((vector<int,allocator<int> >::size_type) G__int(libp->para[0]), *(int*) G__Intref(&libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<int,allocator<int> >((vector<int,allocator<int> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<int,allocator<int> >((vector<int,allocator<int> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<int,allocator<int> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<int,allocator<int> >(*(vector<int,allocator<int> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<int,allocator<int> >(*(vector<int,allocator<int> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<int,allocator<int> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<int,allocator<int> >(*((vector<int,allocator<int> >::const_iterator*) G__int(libp->para[0])), *((vector<int,allocator<int> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<int,allocator<int> >(*((vector<int,allocator<int> >::const_iterator*) G__int(libp->para[0])), *((vector<int,allocator<int> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int,allocator<int> >& obj = ((vector<int,allocator<int> >*) G__getstructoffset())->operator=(*(vector<int,allocator<int> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<int,allocator<int> >*) G__getstructoffset())->reserve((vector<int,allocator<int> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const int& obj = ((vector<int,allocator<int> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const int& obj = ((vector<int,allocator<int> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<int,allocator<int> >*) G__getstructoffset())->push_back(*(int*) G__Intref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<int,allocator<int> >*) G__getstructoffset())->swap(*(vector<int,allocator<int> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int,allocator<int> >::iterator* pobj;
         vector<int,allocator<int> >::iterator xobj = ((vector<int,allocator<int> >*) G__getstructoffset())->insert(*((vector<int,allocator<int> >::iterator*) G__int(libp->para[0])), *(int*) G__Intref(&libp->para[1]));
         pobj = new vector<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<int,allocator<int> >*) G__getstructoffset())->insert(*((vector<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((vector<int,allocator<int> >::const_iterator*) G__int(libp->para[1]))
, *((vector<int,allocator<int> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<int,allocator<int> >*) G__getstructoffset())->insert(*((vector<int,allocator<int> >::iterator*) G__int(libp->para[0])), (vector<int,allocator<int> >::size_type) G__int(libp->para[1])
, *(int*) G__Intref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<int,allocator<int> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<int,allocator<int> >*) G__getstructoffset())->erase(*((vector<int,allocator<int> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<int,allocator<int> >*) G__getstructoffset())->erase(*((vector<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((vector<int,allocator<int> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__parts2treeDct_172_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<int,allocator<int> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<int,allocator<int> > G__TvectorlEintcOallocatorlEintgRsPgR;
static int G__parts2treeDct_172_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<int,allocator<int> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<int,allocator<int> >*) (soff+(sizeof(vector<int,allocator<int> >)*i)))->~G__TvectorlEintcOallocatorlEintgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<int,allocator<int> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<int,allocator<int> >*) (soff))->~G__TvectorlEintcOallocatorlEintgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MinimalEvent */

/* vector<int,allocator<int> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncparts2treeDct {
 public:
  G__Sizep2memfuncparts2treeDct(): p(&G__Sizep2memfuncparts2treeDct::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncparts2treeDct::*p)();
};

size_t G__get_sizep2memfuncparts2treeDct()
{
  G__Sizep2memfuncparts2treeDct a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceparts2treeDct() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableparts2treeDct() {

   /* Setting up typedef entry */
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",68,-1,0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",68,-1,256,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",100,-1,1,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",100,-1,257,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__parts2treeDctLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__parts2treeDctLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__parts2treeDctLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__parts2treeDctLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__parts2treeDctLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__parts2treeDctLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__parts2treeDctLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__parts2treeDctLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",105,-1,0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",73,-1,0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",73,-1,256,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",105,-1,1,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",105,-1,257,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__parts2treeDctLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__parts2treeDctLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__parts2treeDctLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__parts2treeDctLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MinimalEvent */
static void G__setup_memvarMinimalEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__parts2treeDctLN_MinimalEvent));
   { MinimalEvent *p; p=(MinimalEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__parts2treeDctLN_DoubleInBinary),G__defined_typename("DoubleInBinary"),-1,4,"transformer=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__parts2treeDctLN_IntInBinary),G__defined_typename("IntInBinary"),-1,4,"iTransformer=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->px)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"px=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->py)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"py=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pz)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->e)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"e=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->id)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eventno)-(long)(p)),107,0,0,-1,G__defined_typename("size_t"),-1,1,"eventno=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->particles)-(long)(p)),107,0,0,-1,G__defined_typename("size_t"),-1,1,"particles=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<int,allocator<int> > */
static void G__setup_memvarvectorlEintcOallocatorlEintgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR));
   { vector<int,allocator<int> > *p; p=(vector<int,allocator<int> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarparts2treeDct() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMinimalEvent(void) {
   /* MinimalEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__parts2treeDctLN_MinimalEvent));
   G__memfunc_setup("MinimalEvent",1225,G__parts2treeDct_170_0_1, 105, G__get_linked_tagnum(&G__parts2treeDctLN_MinimalEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVals",706,G__parts2treeDct_170_0_2, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - - 0 - _px d - - 0 - _py "
"d - - 0 - _pz d - - 0 - _e "
"i - - 0 - _id k - 'size_t' 0 - _eno", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Nullify",739,G__parts2treeDct_170_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Write",523,G__parts2treeDct_170_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'basic_ofstream<char,char_traits<char> >' 'ofstream' 0 - output", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Read",380,G__parts2treeDct_170_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'basic_ifstream<char,char_traits<char> >' 'ifstream' 0 - input", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MinimalEvent", 1225, G__parts2treeDct_170_0_6, (int) ('i'), G__get_linked_tagnum(&G__parts2treeDctLN_MinimalEvent), -1, 0, 1, 1, 1, 0, "u 'MinimalEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MinimalEvent", 1351, G__parts2treeDct_170_0_7, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__parts2treeDct_170_0_8, (int) ('u'), G__get_linked_tagnum(&G__parts2treeDctLN_MinimalEvent), -1, 1, 1, 1, 1, 0, "u 'MinimalEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEintcOallocatorlEintgRsPgR(void) {
   /* vector<int,allocator<int> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR));
   G__memfunc_setup("at",213,G__parts2treeDct_172_0_1, 105, -1, G__defined_typename("vector<int,allocator<int> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<int,allocator<int> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__parts2treeDct_172_0_2, 105, -1, G__defined_typename("vector<int,allocator<int> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<int,allocator<int> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__parts2treeDct_172_0_3, 117, G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__parts2treeDct_172_0_4, 117, G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__parts2treeDct_172_0_5, 117, G__get_linked_tagnum(&G__parts2treeDctLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR), G__defined_typename("vector<int,allocator<int> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__parts2treeDct_172_0_6, 117, G__get_linked_tagnum(&G__parts2treeDctLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR), G__defined_typename("vector<int,allocator<int> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__parts2treeDct_172_0_7, 107, -1, G__defined_typename("vector<int,allocator<int> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__parts2treeDct_172_0_8, 107, -1, G__defined_typename("vector<int,allocator<int> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__parts2treeDct_172_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<int,allocator<int> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__parts2treeDct_172_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<int,allocator<int> >::size_type' 0 - sz i - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__parts2treeDct_172_0_11, 107, -1, G__defined_typename("vector<int,allocator<int> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__parts2treeDct_172_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__parts2treeDct_172_0_13, 105, -1, G__defined_typename("vector<int,allocator<int> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<int,allocator<int> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__parts2treeDct_172_0_14, 105, -1, G__defined_typename("vector<int,allocator<int> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<int,allocator<int> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<int,allocator<int> >",2602,G__parts2treeDct_172_0_15, 105, G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<int,allocator<int> >",2602,G__parts2treeDct_172_0_16, 105, G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<int,allocator<int> >::size_type' 0 - n i - - 11 'int()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<int,allocator<int> >",2602,G__parts2treeDct_172_0_17, 105, G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<int,allocator<int> >",2602,G__parts2treeDct_172_0_18, 105, G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<int,allocator<int> >::iterator' 'vector<int,allocator<int> >::const_iterator' 10 - first u 'vector<int,allocator<int> >::iterator' 'vector<int,allocator<int> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__parts2treeDct_172_0_19, 117, G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__parts2treeDct_172_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<int,allocator<int> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__parts2treeDct_172_0_21, 105, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__parts2treeDct_172_0_22, 105, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__parts2treeDct_172_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__parts2treeDct_172_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__parts2treeDct_172_0_25, 117, G__get_linked_tagnum(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<int,allocator<int> >::iterator' - 0 - position i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__parts2treeDct_172_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<int,allocator<int> >::iterator' - 0 - position u 'vector<int,allocator<int> >::iterator' 'vector<int,allocator<int> >::const_iterator' 10 - first "
"u 'vector<int,allocator<int> >::iterator' 'vector<int,allocator<int> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__parts2treeDct_172_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<int,allocator<int> >::iterator' - 0 - position k - 'vector<int,allocator<int> >::size_type' 0 - n "
"i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__parts2treeDct_172_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__parts2treeDct_172_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__parts2treeDct_172_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<int,allocator<int> >::iterator' - 0 - first u 'vector<int,allocator<int> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__parts2treeDct_172_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<int,allocator<int> >", 2728, G__parts2treeDct_172_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncparts2treeDct() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalparts2treeDct() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcparts2treeDct() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__parts2treeDctLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__parts2treeDctLN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator = { "vector<double,allocator<double> >::iterator" , 99 , -1 };
G__linked_taginfo G__parts2treeDctLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<double,allocator<double> >::iterator>" , 99 , -1 };
G__linked_taginfo G__parts2treeDctLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ifstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__parts2treeDctLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ofstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__parts2treeDctLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__parts2treeDctLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__parts2treeDctLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__parts2treeDctLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__parts2treeDctLN_DoubleInBinary = { "DoubleInBinary" , 117 , -1 };
G__linked_taginfo G__parts2treeDctLN_IntInBinary = { "IntInBinary" , 117 , -1 };
G__linked_taginfo G__parts2treeDctLN_MinimalEvent = { "MinimalEvent" , 99 , -1 };
G__linked_taginfo G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgRcLcLiterator = { "vector<int,allocator<int> >::iterator" , 99 , -1 };
G__linked_taginfo G__parts2treeDctLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableparts2treeDct() {
  G__parts2treeDctLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__parts2treeDctLN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator.tagnum = -1 ;
  G__parts2treeDctLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__parts2treeDctLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__parts2treeDctLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__parts2treeDctLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__parts2treeDctLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__parts2treeDctLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__parts2treeDctLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__parts2treeDctLN_DoubleInBinary.tagnum = -1 ;
  G__parts2treeDctLN_IntInBinary.tagnum = -1 ;
  G__parts2treeDctLN_MinimalEvent.tagnum = -1 ;
  G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgRcLcLiterator.tagnum = -1 ;
  G__parts2treeDctLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableparts2treeDct() {

   /* Setting up class,struct,union tag entry */
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__parts2treeDctLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1,298752,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__parts2treeDctLN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__parts2treeDctLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__parts2treeDctLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__parts2treeDctLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__parts2treeDctLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__parts2treeDctLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__parts2treeDctLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__parts2treeDctLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__parts2treeDctLN_DoubleInBinary);
   G__get_linked_tagnum_fwd(&G__parts2treeDctLN_IntInBinary);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__parts2treeDctLN_MinimalEvent),sizeof(MinimalEvent),-1,263424,(char*)NULL,G__setup_memvarMinimalEvent,G__setup_memfuncMinimalEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgR),sizeof(vector<int,allocator<int> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEintcOallocatorlEintgRsPgR,G__setup_memfuncvectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__parts2treeDctLN_vectorlEintcOallocatorlEintgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__parts2treeDctLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupparts2treeDct(void) {
  G__check_setup_version(30051515,"G__cpp_setupparts2treeDct()");
  G__set_cpp_environmentparts2treeDct();
  G__cpp_setup_tagtableparts2treeDct();

  G__cpp_setup_inheritanceparts2treeDct();

  G__cpp_setup_typetableparts2treeDct();

  G__cpp_setup_memvarparts2treeDct();

  G__cpp_setup_memfuncparts2treeDct();
  G__cpp_setup_globalparts2treeDct();
  G__cpp_setup_funcparts2treeDct();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncparts2treeDct();
  return;
}
class G__cpp_setup_initparts2treeDct {
  public:
    G__cpp_setup_initparts2treeDct() { G__add_setup_func("parts2treeDct",(G__incsetup)(&G__cpp_setupparts2treeDct)); G__call_setup_funcs(); }
   ~G__cpp_setup_initparts2treeDct() { G__remove_setup_func("parts2treeDct"); }
};
G__cpp_setup_initparts2treeDct G__cpp_setup_initializerparts2treeDct;

